"""added chats

Revision ID: c4c1e9c0a2d9
Revises: e201b0068a71
Create Date: 2022-10-18 07:53:43.710982

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "c4c1e9c0a2d9"
down_revision = "e201b0068a71"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "chats_types",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_chats_types_id"), "chats_types", ["id"], unique=False
    )
    op.create_table(
        "documents",
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("uuid", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("original_filename", sa.String(length=255), nullable=True),
        sa.Column("security_name", sa.String(length=255), nullable=True),
        sa.Column("size_bytes", sa.Numeric(), nullable=True),
        sa.Column("mime_type", sa.String(length=255), nullable=True),
        sa.Column("status_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["status_id"],
            ["statuses.id"],
        ),
        sa.PrimaryKeyConstraint("uuid"),
    )
    op.create_table(
        "chats",
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("uuid", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("type_id", sa.Integer(), nullable=True),
        sa.Column(
            "title",
            sa.String(),
            nullable=True,
            comment="Если type group - название чата",
        ),
        sa.Column("document_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("status_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["document_id"],
            ["documents.uuid"],
        ),
        sa.ForeignKeyConstraint(
            ["status_id"],
            ["statuses.id"],
        ),
        sa.ForeignKeyConstraint(
            ["type_id"],
            ["chats_types.id"],
        ),
        sa.PrimaryKeyConstraint("uuid"),
    )
    op.create_table(
        "chats_users",
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("uuid", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("chat_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("user_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("status_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["chat_id"],
            ["chats.uuid"],
        ),
        sa.ForeignKeyConstraint(
            ["status_id"],
            ["statuses.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.uuid"],
        ),
        sa.PrimaryKeyConstraint("uuid"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("chats_users")
    op.drop_table("chats")
    op.drop_table("documents")
    op.drop_index(op.f("ix_chats_types_id"), table_name="chats_types")
    op.drop_table("chats_types")
    # ### end Alembic commands ###
